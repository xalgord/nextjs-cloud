import { NextResponse } from "next/server"
import { getToken } from "next-auth/jwt"
import type { NextRequest } from "next/server"

export async function middleware(request: NextRequest) {
const token = await getToken({ req: request })
const isAuthenticated = !!token

// Define protected routes
const protectedPaths = ["/dashboard"]

// Check if the current path is a protected path
const isProtectedPath = protectedPaths.some((path) => request.nextUrl.pathname.startsWith(path))

if (isProtectedPath && !isAuthenticated) {
// Redirect to login page if trying to access protected route without authentication
const url = new URL("/login", request.url)
url.searchParams.set("callbackUrl", request.nextUrl.pathname)
return NextResponse.redirect(url)
}

return NextResponse.next()
}

export const config = {
matcher: ["/dashboard/:path*"],
}
